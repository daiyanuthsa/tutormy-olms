# Nama workflow yang akan tampil di tab Actions
name: Manual Deploy Laravel to Production

# Pemicu: Workflow ini hanya akan berjalan saat dipicu secara manual
on:
  workflow_dispatch:

# Izin: Diperlukan untuk checkout kode dan menulis commit
permissions:
  contents: write

# Daftar pekerjaan (jobs) yang akan dijalankan
jobs:
  build-and-deploy:
    # Menggunakan runner Ubuntu versi terbaru
    runs-on: ubuntu-latest

    # Langkah-langkah (steps) yang akan dieksekusi
    steps:
      # Langkah 1: Checkout kode dari branch yang dipilih (misalnya, 'main')
      - name: Checkout Code
        uses: actions/checkout@v4

      # Langkah 4: Setup Node.js untuk build aset frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Sesuaikan dengan versi Node.js Anda

      # Langkah 5: Install dependensi NPM dan build aset
      - name: Install NPM Dependencies and Build
        run: |
          npm install
          npm run build
          
      - name: Commit and Push to Production
        run: |
          # Konfigurasi identitas Git untuk runner
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Secara paksa tambahkan folder build yang diabaikan
          # Ini adalah perintah kunci untuk mengatasi .gitignore
          git add -f public/build
          
          # Cek status untuk melihat apakah ada file yang siap di-commit
          # Opsi --porcelain akan memberikan output jika ada perubahan, atau kosong jika tidak ada
          # Kita simpan outputnya ke dalam sebuah variabel
          STATUS=$(git status --porcelain)
          
          # Periksa apakah variabel STATUS tidak kosong
          if [ -n "$STATUS" ]; then
            echo "âœ… Changes detected in the build directory. Proceeding to commit."
            # Lakukan commit
            git commit -m "Deploy: Build frontend assets and sync to production branch"
            
            # Lakukan force push ke branch production
            git push --force origin HEAD:production
            
            echo "ðŸš€ Successfully deployed to production branch."
          else
            echo "âœ… No changes detected in build files. Nothing to commit."
          fi
